services:
    _defaults:
        autowire: true
        autoconfigure: true

    # Controlador para el registro de usuarios
    App\Infrastructure\Presentation\Controller\:
        resource: '../Infrastructure/Presentation/Controller/*'
        tags: ['controller.service_arguments']

    # Caso de uso para el registro de usuarios
    App\Application\UseCase\RegisterUser: ~

    # Repositorio de usuarios
    App\Infrastructure\Repository\DoctrineUserRepository: ~

    # Manejador de eventos para enviar email de bienvenida
    App\Application\EventListener\SendWelcomeEmail:
        tags:
            - { name: 'kernel.event_listener', event: 'user.registered', method: '__invoke' }

    # Alias para la interfaz UserRepositoryInterface
    App\Domain\Repository\UserRepositoryInterface: '@App\Infrastructure\Repository\DoctrineUserRepository'

    # Define el servicio EventDispatcherInterface
    Symfony\Component\EventDispatcher\EventDispatcherInterface: '@event_dispatcher'

#------ ---
    # --Define el servicio EntityManagerInterface
    # ---Doctrine\ORM\EntityManagerInterface: '@doctrine.orm.entity_manager'

#------ +++
    # Servicio personalizado para EntityManager
    App\Infrastructure\Persistence\DoctrineEntityManager:
        class: Doctrine\ORM\EntityManagerInterface
        factory: ['App\Infrastructure\Persistence\DoctrineEntityManagerFactory', 'create']

    # Alias para EntityManagerInterface
    Doctrine\ORM\EntityManagerInterface: '@App\Infrastructure\Persistence\DoctrineEntityManager'